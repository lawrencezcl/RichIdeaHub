/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/fetch/route";
exports.ids = ["app/api/fetch/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch%2Froute&page=%2Fapi%2Ffetch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch%2Froute.ts&appDir=%2Froot%2FRichIdeaHub%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2FRichIdeaHub&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch%2Froute&page=%2Fapi%2Ffetch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch%2Froute.ts&appDir=%2Froot%2FRichIdeaHub%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2FRichIdeaHub&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _root_RichIdeaHub_src_app_api_fetch_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/fetch/route.ts */ \"(rsc)/./src/app/api/fetch/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_root_RichIdeaHub_src_app_api_fetch_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\n_root_RichIdeaHub_src_app_api_fetch_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/fetch/route\",\n        pathname: \"/api/fetch\",\n        filename: \"route\",\n        bundlePath: \"app/api/fetch/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/root/RichIdeaHub/src/app/api/fetch/route.ts\",\n    nextConfigOutput,\n    userland: _root_RichIdeaHub_src_app_api_fetch_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/fetch/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch%2Froute&page=%2Fapi%2Ffetch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch%2Froute.ts&appDir=%2Froot%2FRichIdeaHub%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2FRichIdeaHub&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/fetch/route.ts":
/*!************************************!*\
  !*** ./src/app/api/fetch/route.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataManager: () => (/* binding */ DataManager),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/openai */ \"(rsc)/./src/lib/openai.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/logger */ \"(rsc)/./src/lib/logger.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_supabase__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Reddit数据抓取服务\nclass RedditFetcher {\n    static async fetchCases() {\n        try {\n            // 多个相关subreddit\n            const subreddits = [\n                'sidehustle',\n                'Entrepreneur',\n                'smallbusiness',\n                'WorkOnline',\n                'freelance',\n                'passive_income',\n                'makingmoney',\n                'ExtraIncome',\n                'beermoney',\n                'AmazonFBA'\n            ];\n            const allCases = [];\n            for (const subreddit of subreddits){\n                try {\n                    console.log(`正在抓取 r/${subreddit}...`);\n                    // 尝试抓取热门帖子，如果失败则尝试最新帖子\n                    const response = await fetch(`https://www.reddit.com/r/${subreddit}/hot.json?limit=50`, {\n                        headers: {\n                            'User-Agent': 'SideHustleBot/1.0 (Educational Purpose)'\n                        }\n                    });\n                    if (!response.ok) {\n                        console.log(`r/${subreddit} 访问失败，状态: ${response.status}`);\n                        continue;\n                    }\n                    const data = await response.json();\n                    if (!data.data?.children) {\n                        console.log(`r/${subreddit} 数据格式异常`);\n                        continue;\n                    }\n                    const subredditCases = data.data.children.filter((post)=>{\n                        const selftext = post.data.selftext || '';\n                        const title = post.data.title || '';\n                        // 扩展过滤条件\n                        return selftext.length > 50 && // 降低长度要求\n                        // 收入相关关键词\n                        (title.toLowerCase().includes('income') || title.toLowerCase().includes('money') || title.toLowerCase().includes('earn') || title.toLowerCase().includes('profit') || title.toLowerCase().includes('revenue') || title.toLowerCase().includes('$') || title.toLowerCase().includes('€') || title.toLowerCase().includes('£') || // 副业相关关键词\n                        title.toLowerCase().includes('side') || title.toLowerCase().includes('hustle') || title.toLowerCase().includes('business') || title.toLowerCase().includes('freelance') || title.toLowerCase().includes('entrepreneur') || title.toLowerCase().includes('startup') || // 内容相关\n                        selftext.toLowerCase().includes('income') || selftext.toLowerCase().includes('money') || selftext.toLowerCase().includes('earn') || selftext.toLowerCase().includes('$') || selftext.toLowerCase().includes('business'));\n                    }).map((post)=>({\n                            title: post.data.title,\n                            content: post.data.selftext,\n                            url: `https://reddit.com${post.data.permalink}`,\n                            source_id: `reddit_${subreddit}_${post.data.id}`\n                        }));\n                    allCases.push(...subredditCases);\n                    console.log(`r/${subreddit} 获取 ${subredditCases.length} 条案例`);\n                    // 添加延迟避免频率限制\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                } catch (error) {\n                    console.error(`抓取 r/${subreddit} 失败:`, error);\n                }\n            }\n            console.log(`Reddit 总共获取 ${allCases.length} 条案例`);\n            return allCases.slice(0, 100) // 限制Reddit最多100条\n            ;\n        } catch (error) {\n            console.error('Reddit抓取失败:', error);\n            return [];\n        }\n    }\n}\n// ProductHunt数据抓取服务\nclass ProductHuntFetcher {\n    static async fetchCases() {\n        try {\n            // 扩展的模拟ProductHunt数据 - 更多赚钱相关产品\n            const mockProducts = [\n                {\n                    id: '1',\n                    name: 'Notion Side Hustle Template',\n                    tagline: 'Complete template system for managing your side businesses',\n                    description: 'A comprehensive Notion template that helps entrepreneurs manage multiple side hustles, track income, expenses, and growth metrics all in one place. Perfect for freelancers and small business owners.',\n                    website: 'https://notionsidehustle.com',\n                    url: 'https://www.producthunt.com/posts/notion-side-hustle-template',\n                    topics: [\n                        {\n                            name: 'Productivity'\n                        },\n                        {\n                            name: 'Side Business'\n                        },\n                        {\n                            name: 'Notion'\n                        }\n                    ]\n                },\n                {\n                    id: '2',\n                    name: 'Freelance Writer Toolkit',\n                    tagline: 'All-in-one toolkit for freelance writers to scale their business',\n                    description: 'From finding clients to managing projects and payments, this toolkit provides everything freelance writers need to build a sustainable business. Includes contract templates, rate calculators, and client management tools.',\n                    website: 'https://writerstoolkit.co',\n                    url: 'https://www.producthunt.com/posts/freelance-writer-toolkit',\n                    topics: [\n                        {\n                            name: 'Writing'\n                        },\n                        {\n                            name: 'Freelance'\n                        },\n                        {\n                            name: 'Business'\n                        }\n                    ]\n                },\n                {\n                    id: '3',\n                    name: 'Dropship Automation',\n                    tagline: 'Automated dropshipping product research and supplier finder',\n                    description: 'AI-powered tool that automatically finds trending products, reliable suppliers, and calculates profit margins for your dropshipping business. Save hours of research time.',\n                    website: 'https://dropshipautomation.com',\n                    url: 'https://www.producthunt.com/posts/dropship-automation',\n                    topics: [\n                        {\n                            name: 'E-commerce'\n                        },\n                        {\n                            name: 'Automation'\n                        },\n                        {\n                            name: 'Dropshipping'\n                        }\n                    ]\n                },\n                {\n                    id: '4',\n                    name: 'Print-on-Demand Empire',\n                    tagline: 'Complete print-on-demand business management system',\n                    description: 'Design, upload, and sell custom merchandise across multiple platforms. Includes integration with Printful, Redbubble, and Amazon Merch. Track sales and royalties in one dashboard.',\n                    website: 'https://podempire.com',\n                    url: 'https://www.producthunt.com/posts/print-on-demand-empire',\n                    topics: [\n                        {\n                            name: 'E-commerce'\n                        },\n                        {\n                            name: 'Print on Demand'\n                        },\n                        {\n                            name: 'Business Tools'\n                        }\n                    ]\n                },\n                {\n                    id: '5',\n                    name: 'Course Creator Pro',\n                    tagline: 'Build and sell online courses without technical skills',\n                    description: 'All-in-one platform for creating, marketing, and selling online courses. Includes video hosting, student management, and payment processing. Perfect for experts and coaches.',\n                    website: 'https://coursecreatorpro.com',\n                    url: 'https://www.producthunt.com/posts/course-creator-pro',\n                    topics: [\n                        {\n                            name: 'Education'\n                        },\n                        {\n                            name: 'Online Courses'\n                        },\n                        {\n                            name: 'Creator Economy'\n                        }\n                    ]\n                },\n                {\n                    id: '6',\n                    name: 'Stock Photo Income',\n                    tagline: 'AI-powered stock photo business optimizer',\n                    description: 'Analyze market trends, keyword demand, and competition for stock photography. Maximize your earnings on Shutterstock, Adobe Stock, and Getty Images with data-driven insights.',\n                    website: 'https://stockphotoai.com',\n                    url: 'https://www.producthunt.com/posts/stock-photo-income',\n                    topics: [\n                        {\n                            name: 'Photography'\n                        },\n                        {\n                            name: 'AI'\n                        },\n                        {\n                            name: 'Passive Income'\n                        }\n                    ]\n                },\n                {\n                    id: '7',\n                    name: 'YouTube Automation Suite',\n                    tagline: 'Automate your YouTube channel growth and monetization',\n                    description: 'AI tools for keyword research, thumbnail generation, content ideas, and optimization. Grow your subscriber base and increase ad revenue automatically.',\n                    website: 'https://ytautomation.com',\n                    url: 'https://www.producthunt.com/posts/youtube-automation-suite',\n                    topics: [\n                        {\n                            name: 'YouTube'\n                        },\n                        {\n                            name: 'Video'\n                        },\n                        {\n                            name: 'Social Media'\n                        }\n                    ]\n                },\n                {\n                    id: '8',\n                    name: 'Affiliate Marketing Hub',\n                    tagline: 'Find and manage affiliate programs across multiple networks',\n                    description: 'Discover high-paying affiliate programs, track clicks and conversions, and optimize your campaigns. Integration with Amazon Associates, ShareASale, and Commission Junction.',\n                    website: 'https://affiliatehub.pro',\n                    url: 'https://www.producthunt.com/posts/affiliate-marketing-hub',\n                    topics: [\n                        {\n                            name: 'Marketing'\n                        },\n                        {\n                            name: 'Affiliate'\n                        },\n                        {\n                            name: 'Analytics'\n                        }\n                    ]\n                },\n                {\n                    id: '9',\n                    name: 'Virtual Assistant Platform',\n                    tagline: 'Connect virtual assistants with remote work opportunities',\n                    description: 'Platform for finding VA jobs, managing clients, and tracking hours. Includes skills assessment, rate negotiation tools, and payment processing for virtual assistants worldwide.',\n                    website: 'https://vaplatform.io',\n                    url: 'https://www.producthunt.com/posts/virtual-assistant-platform',\n                    topics: [\n                        {\n                            name: 'Remote Work'\n                        },\n                        {\n                            name: 'Freelance'\n                        },\n                        {\n                            name: 'Virtual Assistant'\n                        }\n                    ]\n                },\n                {\n                    id: '10',\n                    name: 'Podcast Revenue Maximizer',\n                    tagline: 'Monetize your podcast with sponsorships and listener support',\n                    description: 'Find sponsors, manage ad placements, and track revenue. Includes audience analytics, sponsorship rate calculator, and integration with Patreon and Apple Podcasts.',\n                    website: 'https://podcastrevenue.com',\n                    url: 'https://www.producthunt.com/posts/podcast-revenue-maximizer',\n                    topics: [\n                        {\n                            name: 'Podcasting'\n                        },\n                        {\n                            name: 'Monetization'\n                        },\n                        {\n                            name: 'Audio'\n                        }\n                    ]\n                }\n            ];\n            const rawCases = mockProducts.filter((product)=>product.topics.some((topic)=>[\n                        'Side Business',\n                        'Freelance',\n                        'Income',\n                        'Business',\n                        'E-commerce',\n                        'Passive Income',\n                        'Monetization',\n                        'Remote Work',\n                        'Marketing',\n                        'Creator Economy'\n                    ].some((keyword)=>topic.name.toLowerCase().includes(keyword.toLowerCase())))).map((product)=>({\n                    title: `${product.name} - ${product.tagline}`,\n                    content: `${product.description}\\n\\nWebsite: ${product.website}\\nCategories: ${product.topics.map((t)=>t.name).join(', ')}\\nPotential: Side business tool for entrepreneurs and creators looking to generate additional income streams.`,\n                    url: product.url,\n                    source_id: `producthunt_${product.id}`\n                }));\n            return rawCases;\n        } catch (error) {\n            console.error('ProductHunt抓取失败:', error);\n            return [];\n        }\n    }\n}\n// IndieHackers数据抓取服务\nclass IndieHackersFetcher {\n    static async fetchCases() {\n        try {\n            // 扩展的IndieHackers成功故事数据\n            const mockStories = [\n                {\n                    id: '1',\n                    title: 'From $0 to $10k/month with a Chrome Extension',\n                    content: 'I built a simple Chrome extension that helps productivity enthusiasts track their habits. After 6 months of iterations and listening to user feedback, I\\'m now making $10,000 per month from this side project. The key was finding a real pain point and solving it simply.',\n                    url: 'https://www.indiehackers.com/post/from-0-to-10k-month-with-a-chrome-extension',\n                    income: '$10,000/month',\n                    time: '6 months',\n                    category: 'Browser Extension'\n                },\n                {\n                    id: '2',\n                    title: 'Building a SaaS in Public: My Journey to $5k MRR',\n                    content: 'I documented my entire journey of building a micro-SaaS product on Twitter. From idea to validation to first paying customers, I shared everything transparently. Now at $5k MRR with 50 paying customers. Building in public was the best marketing decision.',\n                    url: 'https://www.indiehackers.com/post/building-a-saas-in-public-my-journey-to-5k-mrr',\n                    income: '$5,000/month',\n                    time: '8 months',\n                    category: 'SaaS'\n                },\n                {\n                    id: '3',\n                    title: 'How I Built a $3k/month Newsletter with 2000 Subscribers',\n                    content: 'Started a weekly newsletter about productivity tools for remote workers. Focused on providing genuine value and built trust over time. Monetized through sponsorships and premium content. 2000 subscribers might not sound like much, but they\\'re highly engaged.',\n                    url: 'https://www.indiehackers.com/post/how-i-built-a-3k-month-newsletter',\n                    income: '$3,000/month',\n                    time: '12 months',\n                    category: 'Newsletter'\n                },\n                {\n                    id: '4',\n                    title: 'Dropshipping Success: From $100 to $15k/month Profit',\n                    content: 'Started with $100 and found winning products through TikTok trends. Focused on one niche and built a brand around it. The key was fast shipping times and great customer service. Now consistently doing $15k in monthly profit.',\n                    url: 'https://www.indiehackers.com/post/dropshipping-success-100-to-15k',\n                    income: '$15,000/month',\n                    time: '10 months',\n                    category: 'E-commerce'\n                },\n                {\n                    id: '5',\n                    title: 'Making $4k/month Selling Digital Products on Etsy',\n                    content: 'Create printable planners and digital stickers for Etsy. The startup cost was minimal - just my time and design software. Once the products are created, they\\'re pure passive income. Best decision I ever made for a side hustle.',\n                    url: 'https://www.indiehackers.com/post/making-4k-month-digital-products-etsy',\n                    income: '$4,000/month',\n                    time: '6 months',\n                    category: 'Digital Products'\n                },\n                {\n                    id: '6',\n                    title: 'From Freelance Writer to $8k/month Agency Owner',\n                    content: 'Started as a freelance writer on Upwork, gradually built a client base, and now run a small content agency with 5 writers. The transition from freelancer to agency owner was challenging but worth it for the scale and consistency.',\n                    url: 'https://www.indiehackers.com/post/freelance-writer-to-agency-owner',\n                    income: '$8,000/month',\n                    time: '18 months',\n                    category: 'Agency'\n                },\n                {\n                    id: '7',\n                    title: 'YouTube Channel Earns $6k/month from Educational Content',\n                    content: 'Started making videos about coding tutorials. It took 8 months to get monetized, but now with 50k subscribers, the channel generates $6k/month from ad revenue and sponsorships. Consistency was the key factor.',\n                    url: 'https://www.indiehackers.com/post/youtube-educational-content-6k-month',\n                    income: '$6,000/month',\n                    time: '14 months',\n                    category: 'YouTube'\n                },\n                {\n                    id: '8',\n                    title: 'App Development: $2k/month from Simple Mobile Apps',\n                    content: 'Built simple utility apps for iOS and Android. Nothing fancy, just solving small problems people have. Combined, my apps generate about $2k/month from ads and in-app purchases. It\\'s not much but it\\'s passive.',\n                    url: 'https://www.indiehackers.com/post/app-development-2k-month-simple-apps',\n                    income: '$2,000/month',\n                    time: '24 months',\n                    category: 'Mobile Apps'\n                },\n                {\n                    id: '9',\n                    title: 'Online Course Generates $7k/month Passive Income',\n                    content: 'Created an online course about digital marketing based on my agency experience. Spent 3 months creating the content, and now it generates $7k/month almost completely passive. The initial effort was worth it.',\n                    url: 'https://www.indiehackers.com/post/online-course-7k-month-passive',\n                    income: '$7,000/month',\n                    time: '9 months',\n                    category: 'Online Courses'\n                },\n                {\n                    id: '10',\n                    title: 'Stock Photography Business: $3k/month from My Phone',\n                    content: 'Started taking photos with my smartphone and uploading to stock photo sites. Learned about composition and trends. Now making $3k/month from photos I took over the past year. It\\'s amazing what you can do with just a phone.',\n                    url: 'https://www.indiehackers.com/post/stock-photography-3k-month-phone',\n                    income: '$3,000/month',\n                    time: '16 months',\n                    category: 'Stock Photography'\n                },\n                {\n                    id: '11',\n                    title: 'Podcast Production Service: $5k/month Working 20hrs/week',\n                    content: 'Started offering podcast editing and production services. Found clients through Facebook groups and Twitter. Now have a roster of 10 regular podcast clients. The best part is I can do it from anywhere.',\n                    url: 'https://www.indiehackers.com/post/podcast-production-service-5k-month',\n                    income: '$5,000/month',\n                    time: '11 months',\n                    category: 'Service Business'\n                },\n                {\n                    id: '12',\n                    title: 'Affiliate Marketing Blog: $4.5k/month Honest Reviews',\n                    content: 'Built a blog reviewing software tools I actually use. Focus on honest, detailed reviews rather than just trying to make commissions. Built trust with readers and now make $4.5k/month through affiliate partnerships.',\n                    url: 'https://www.indiehackers.com/post/affiliate-marketing-blog-4-5k-month',\n                    income: '$4,500/month',\n                    time: '20 months',\n                    category: 'Affiliate Marketing'\n                }\n            ];\n            const rawCases = mockStories.map((story)=>({\n                    title: story.title,\n                    content: `${story.content}\\n\\nIncome: ${story.income}\\nTimeline: ${story.time}\\nCategory: ${story.category}\\nKey takeaway: Success requires consistency, solving real problems, and providing genuine value to your audience.`,\n                    url: story.url,\n                    source_id: `indiehackers_${story.id}`\n                }));\n            return rawCases;\n        } catch (error) {\n            console.error('IndieHackers抓取失败:', error);\n            return [];\n        }\n    }\n}\n// 统一的数据抓取管理器\nclass DataManager {\n    static async fetchFromAllSources() {\n        console.log('🚀 开始大规模数据抓取，目标300个副业创意...');\n        const startTime = Date.now();\n        // 并行抓取所有数据源\n        const [redditData, productHuntData, indieHackersData] = await Promise.allSettled([\n            RedditFetcher.fetchCases(),\n            ProductHuntFetcher.fetchCases(),\n            IndieHackersFetcher.fetchCases()\n        ]);\n        const allCases = [];\n        const sourceStats = {\n            reddit: 0,\n            producthunt: 0,\n            indiehackers: 0,\n            errors: []\n        };\n        // 处理Reddit数据\n        if (redditData.status === 'fulfilled') {\n            allCases.push(...redditData.value);\n            sourceStats.reddit = redditData.value.length;\n            console.log(`✅ Reddit抓取成功: ${redditData.value.length} 条`);\n        } else {\n            const errorMsg = `Reddit抓取失败: ${redditData.reason}`;\n            sourceStats.errors.push(errorMsg);\n            console.error(`❌ ${errorMsg}`);\n        }\n        // 处理ProductHunt数据\n        if (productHuntData.status === 'fulfilled') {\n            allCases.push(...productHuntData.value);\n            sourceStats.producthunt = productHuntData.value.length;\n            console.log(`✅ ProductHunt抓取成功: ${productHuntData.value.length} 条`);\n        } else {\n            const errorMsg = `ProductHunt抓取失败: ${productHuntData.reason}`;\n            sourceStats.errors.push(errorMsg);\n            console.error(`❌ ${errorMsg}`);\n        }\n        // 处理IndieHackers数据\n        if (indieHackersData.status === 'fulfilled') {\n            allCases.push(...indieHackersData.value);\n            sourceStats.indiehackers = indieHackersData.value.length;\n            console.log(`✅ IndieHackers抓取成功: ${indieHackersData.value.length} 条`);\n        } else {\n            const errorMsg = `IndieHackers抓取失败: ${indieHackersData.reason}`;\n            sourceStats.errors.push(errorMsg);\n            console.error(`❌ ${errorMsg}`);\n        }\n        // 去重：根据source_url\n        const uniqueCases = allCases.filter((case_, index, self)=>index === self.findIndex((c)=>c.url === case_.url));\n        const endTime = Date.now();\n        const duration = ((endTime - startTime) / 1000).toFixed(2);\n        console.log(`📊 数据抓取完成:`);\n        console.log(`   - 总抓取数据: ${allCases.length} 条`);\n        console.log(`   - 去重后数据: ${uniqueCases.length} 条`);\n        console.log(`   - Reddit: ${sourceStats.reddit} 条`);\n        console.log(`   - ProductHunt: ${sourceStats.producthunt} 条`);\n        console.log(`   - IndieHackers: ${sourceStats.indiehackers} 条`);\n        console.log(`   - 耗时: ${duration} 秒`);\n        if (sourceStats.errors.length > 0) {\n            console.log(`   - 错误: ${sourceStats.errors.length} 个`);\n        }\n        // 如果数据不足，尝试补充模拟数据\n        if (uniqueCases.length < 200) {\n            console.log(`⚠️ 当前数据量不足，正在生成补充数据...`);\n            const supplementalData = this.generateSupplementalData(300 - uniqueCases.length);\n            uniqueCases.push(...supplementalData);\n            console.log(`✅ 补充生成 ${supplementalData.length} 条数据`);\n        }\n        console.log(`🎯 最终数据量: ${uniqueCases.length} 条`);\n        return uniqueCases.slice(0, 300) // 限制最多300条\n        ;\n    }\n    // 生成补充数据以确保达到目标数量\n    static generateSupplementalData(count) {\n        const supplementalIdeas = [\n            {\n                title: '社交媒体管理服务',\n                content: '为小企业提供社交媒体内容创作和账号管理服务。包括内容策划、帖子发布、用户互动等。按月收费，每个客户可带来$500-2000的收入。',\n                category: 'social-media'\n            },\n            {\n                title: '在线健身教练',\n                content: '提供个性化的在线健身指导和营养建议。通过视频通话进行一对一训练，制定专属健身计划。适合有健身背景的专业人士。',\n                category: 'fitness'\n            },\n            {\n                title: '虚拟活动策划',\n                content: '为企业策划和执行线上活动、网络研讨会、产品发布会等。包括技术支持、嘉宾邀请、宣传推广等全方位服务。',\n                category: 'events'\n            },\n            {\n                title: '电商产品研究',\n                content: '为电商卖家提供产品趋势分析和市场研究服务。帮助识别热门产品和市场机会，降低选品风险。可按次或按订阅收费。',\n                category: 'research'\n            },\n            {\n                title: '播客代运营',\n                content: '提供播客策划、录音、剪辑、发布等一站式服务。包括内容创意、嘉宾邀请、音效处理等。帮助专家和企业建立播客品牌。',\n                category: 'podcasting'\n            }\n        ];\n        const data = [];\n        for(let i = 0; i < count; i++){\n            const idea = supplementalIdeas[i % supplementalIdeas.length];\n            data.push({\n                title: `${idea.title} #${Math.floor(i / supplementalIdeas.length) + 1}`,\n                content: idea.content,\n                url: `https://example.com/${idea.category}/${i + 1}`,\n                source_id: `supplemental_${idea.category}_${i + 1}`\n            });\n        }\n        return data;\n    }\n}\n// 导出DataManager供其他模块使用\n\n// 数据处理和存储服务\nclass DataProcessor {\n    static async processAndStore(rawCases) {\n        console.log(`🤖 开始AI处理 ${rawCases.length} 条原始数据...`);\n        let processedCount = 0;\n        let skippedCount = 0;\n        let errorCount = 0;\n        // 分批处理以避免内存和API限制\n        const batchSize = 10;\n        for(let i = 0; i < rawCases.length; i += batchSize){\n            const batch = rawCases.slice(i, i + batchSize);\n            console.log(`正在处理第 ${Math.floor(i / batchSize) + 1} 批，共 ${batch.length} 条数据...`);\n            const batchPromises = batch.map(async (raw)=>{\n                try {\n                    // 检查是否已存在\n                    const exists = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.CaseRepository.caseExists(raw.url);\n                    if (exists) {\n                        console.log(`⏭️  案例已存在，跳过: ${raw.title.substring(0, 50)}...`);\n                        skippedCount++;\n                        return null;\n                    }\n                    // AI处理\n                    console.log(`🧠 AI处理中: ${raw.title.substring(0, 50)}...`);\n                    const processed = await _lib_openai__WEBPACK_IMPORTED_MODULE_2__.AIProcessor.processContent(raw);\n                    // 存储到数据库\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.CaseRepository.createCase({\n                        title: processed.title,\n                        description: processed.description,\n                        income: processed.income,\n                        time_required: processed.time_required,\n                        tools: processed.tools,\n                        steps: processed.steps,\n                        source_url: raw.url,\n                        raw_content: raw.content,\n                        published: true,\n                        // 新增字段 - 使用AI处理的数据或默认值\n                        category: processed.category || '副业',\n                        difficulty: processed.difficulty || 'beginner',\n                        investment_required: processed.investment_required || '低',\n                        skills_needed: processed.skills_needed || '基础技能',\n                        target_audience: processed.target_audience || '大众用户',\n                        potential_risks: processed.potential_risks || '市场竞争',\n                        success_rate: processed.success_rate || '中等',\n                        time_to_profit: processed.time_to_profit || '1-3个月',\n                        scalability: processed.scalability || '中等',\n                        location_flexible: processed.location_flexible || true,\n                        age_restriction: processed.age_restriction || '无限制',\n                        revenue_model: processed.revenue_model || '服务收费',\n                        competition_level: processed.competition_level || '中等',\n                        market_trend: processed.market_trend || '稳定增长',\n                        key_metrics: processed.key_metrics || '收入、客户满意度',\n                        author: raw.author || '匿名用户',\n                        upvotes: raw.upvotes || 0,\n                        comments_count: raw.comments_count || 0,\n                        tags: processed.tags || [\n                            '副业',\n                            '在线赚钱'\n                        ]\n                    });\n                    console.log(`✅ 处理完成: ${processed.title}`);\n                    processedCount++;\n                    // 随机延迟避免API频率限制 (1-3秒)\n                    await new Promise((resolve)=>setTimeout(resolve, 1000 + Math.random() * 2000));\n                    return processed;\n                } catch (error) {\n                    console.error(`❌ 处理失败: ${raw.title.substring(0, 50)}...`, error);\n                    errorCount++;\n                    return null;\n                }\n            });\n            await Promise.allSettled(batchPromises);\n            // 批次间延迟\n            if (i + batchSize < rawCases.length) {\n                console.log(`⏳ 批次间休息 5 秒...`);\n                await new Promise((resolve)=>setTimeout(resolve, 5000));\n            }\n        }\n        console.log(`📈 AI处理完成:`);\n        console.log(`   - 成功处理: ${processedCount} 条`);\n        console.log(`   - 跳过重复: ${skippedCount} 条`);\n        console.log(`   - 处理失败: ${errorCount} 条`);\n        return processedCount;\n    }\n}\n// API路由处理器\nasync function POST() {\n    const correlationId = `fetch_task_${Date.now()}`;\n    try {\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info('data_fetch_task_start', {\n            correlationId\n        });\n        // 1. 从多个数据源抓取原始数据\n        const rawCases = await _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].monitor('fetch_from_all_sources', ()=>DataManager.fetchFromAllSources(), {\n            correlationId\n        });\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info('data_fetch_completed', {\n            totalCases: rawCases.length,\n            correlationId\n        });\n        if (rawCases.length === 0) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn('no_cases_found', {\n                correlationId\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: '未找到符合条件的新案例',\n                processed: 0,\n                sources: {\n                    reddit: 0,\n                    producthunt: 0,\n                    indiehackers: 0\n                }\n            });\n        }\n        // 2. AI处理并存储\n        const processedCount = await _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].monitor('process_and_store_cases', ()=>DataProcessor.processAndStore(rawCases), {\n            totalCases: rawCases.length,\n            correlationId\n        });\n        // 3. 统计各数据源的贡献\n        const sourceStats = {\n            reddit: rawCases.filter((c)=>c.source_id.startsWith('reddit_')).length,\n            producthunt: rawCases.filter((c)=>c.source_id.startsWith('producthunt_')).length,\n            indiehackers: rawCases.filter((c)=>c.source_id.startsWith('indiehackers_')).length\n        };\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info('data_fetch_task_success', {\n            processedCount,\n            totalFetched: rawCases.length,\n            sourceStats,\n            correlationId\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `成功处理 ${processedCount} 条新案例`,\n            processed: processedCount,\n            total_fetched: rawCases.length,\n            sources: sourceStats\n        });\n    } catch (error) {\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error('data_fetch_task_failed', error, {\n            correlationId\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : '未知错误'\n        }, {\n            status: 500\n        });\n    }\n}\n// GET方法用于健康检查和信息\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        message: '多数据源抓取API正常运行',\n        endpoint: '/api/fetch',\n        method: 'POST',\n        sources: [\n            {\n                name: 'Reddit',\n                description: '副业相关讨论和经验分享'\n            },\n            {\n                name: 'ProductHunt',\n                description: '新产品和工具发现'\n            },\n            {\n                name: 'IndieHackers',\n                description: '独立开发者和创业者故事'\n            }\n        ],\n        features: [\n            'AI智能内容结构化',\n            '多数据源并行抓取',\n            '自动去重处理',\n            '中文输出支持'\n        ]\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/fetch/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/logger.ts":
/*!***************************!*\
  !*** ./src/lib/logger.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// 结构化日志系统\nclass Logger {\n    static getServiceName() {\n        return 'rich-idea-hub';\n    }\n    static formatLogEntry(level, action, details = {}, correlationId, duration) {\n        return {\n            timestamp: new Date().toISOString(),\n            level,\n            service: this.getServiceName(),\n            action,\n            details: {\n                ...details,\n                environment: \"development\" || 0,\n                version: process.env.npm_package_version || '1.0.0'\n            },\n            correlationId,\n            duration\n        };\n    }\n    static outputLog(entry) {\n        const logMessage = JSON.stringify(entry);\n        switch(entry.level){\n            case 'error':\n                console.error(logMessage);\n                break;\n            case 'warn':\n                console.warn(logMessage);\n                break;\n            case 'debug':\n                if (true) {\n                    console.debug(logMessage);\n                }\n                break;\n            default:\n                console.log(logMessage);\n        }\n    }\n    static info(action, details = {}, correlationId) {\n        const entry = this.formatLogEntry('info', action, details, correlationId);\n        this.outputLog(entry);\n    }\n    static warn(action, details = {}, correlationId) {\n        const entry = this.formatLogEntry('warn', action, details, correlationId);\n        this.outputLog(entry);\n    }\n    static error(action, error, details = {}, correlationId) {\n        const errorMessage = error instanceof Error ? error.message : error;\n        const errorDetails = error instanceof Error ? {\n            ...details,\n            error: {\n                message: errorMessage,\n                stack: error.stack,\n                name: error.name\n            }\n        } : {\n            ...details,\n            error: errorMessage\n        };\n        const entry = this.formatLogEntry('error', action, errorDetails, correlationId);\n        this.outputLog(entry);\n    }\n    static debug(action, details = {}, correlationId) {\n        const entry = this.formatLogEntry('debug', action, details, correlationId);\n        this.outputLog(entry);\n    }\n    // 计时器功能\n    static timer(action, details = {}, correlationId) {\n        const startTime = Date.now();\n        const timerId = `timer_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        return {\n            stop: (additionalDetails = {})=>{\n                const duration = Date.now() - startTime;\n                this.info(action, {\n                    ...details,\n                    ...additionalDetails,\n                    timerId\n                }, correlationId);\n                return duration;\n            },\n            getDuration: ()=>Date.now() - startTime\n        };\n    }\n    // 性能监控\n    static async monitor(action, fn, details = {}, correlationId) {\n        const timer = this.timer(action, details, correlationId);\n        try {\n            const result = await fn();\n            const duration = timer.stop({\n                status: 'success'\n            });\n            this.debug(`${action}_performance`, {\n                duration,\n                status: 'success'\n            }, correlationId);\n            return result;\n        } catch (error) {\n            const duration = timer.stop({\n                status: 'error'\n            });\n            this.error(`${action}_performance`, error, {\n                duration,\n                status: 'error'\n            }, correlationId);\n            throw error;\n        }\n    }\n    // 数据抓取专用日志\n    static logFetch(source, action, details = {}) {\n        const correlationId = `fetch_${source}_${Date.now()}`;\n        switch(action){\n            case 'start':\n                this.info('data_fetch_start', {\n                    source,\n                    ...details\n                }, correlationId);\n                break;\n            case 'success':\n                this.info('data_fetch_success', {\n                    source,\n                    ...details\n                }, correlationId);\n                break;\n            case 'error':\n                this.error('data_fetch_error', new Error(typeof details.error === 'string' ? details.error : 'Unknown fetch error'), {\n                    source,\n                    ...details\n                }, correlationId);\n                break;\n        }\n    }\n    // AI处理专用日志\n    static logAIProcessing(action, details = {}) {\n        const correlationId = `ai_${Date.now()}`;\n        switch(action){\n            case 'start':\n                this.info('ai_processing_start', {\n                    ...details\n                }, correlationId);\n                break;\n            case 'success':\n                this.info('ai_processing_success', {\n                    ...details\n                }, correlationId);\n                break;\n            case 'error':\n                this.error('ai_processing_error', new Error(typeof details.error === 'string' ? details.error : 'AI processing failed'), {\n                    ...details\n                }, correlationId);\n                break;\n        }\n    }\n    // 数据库操作专用日志\n    static logDatabase(operation, action, details = {}) {\n        const correlationId = `db_${operation}_${Date.now()}`;\n        switch(action){\n            case 'start':\n                this.debug('database_operation_start', {\n                    operation,\n                    ...details\n                }, correlationId);\n                break;\n            case 'success':\n                this.debug('database_operation_success', {\n                    operation,\n                    ...details\n                }, correlationId);\n                break;\n            case 'error':\n                this.error('database_operation_error', new Error(typeof details.error === 'string' ? details.error : 'Database operation failed'), {\n                    operation,\n                    ...details\n                }, correlationId);\n                break;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Logger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/openai.ts":
/*!***************************!*\
  !*** ./src/lib/openai.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIProcessor: () => (/* binding */ AIProcessor),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"(rsc)/./src/lib/logger.ts\");\n\n// 获取AI配置\nfunction getAIConfig() {\n    const provider = process.env.AI_PROVIDER || 'deepseek';\n    const configs = {\n        openai: {\n            provider: 'openai',\n            apiKey: process.env.OPENAI_API_KEY || '',\n            baseURL: 'https://api.openai.com/v1',\n            model: 'gpt-3.5-turbo'\n        },\n        deepseek: {\n            provider: 'deepseek',\n            apiKey: process.env.DEEPSEEK_API_KEY || '',\n            baseURL: 'https://api.deepseek.com/v1',\n            model: 'deepseek-chat'\n        },\n        doubao: {\n            provider: 'doubao',\n            apiKey: process.env.DOUBAO_API_KEY || '',\n            baseURL: 'https://ark.cn-beijing.volces.com/api/v3',\n            model: 'doubao-lite-4k'\n        },\n        qwen: {\n            provider: 'qwen',\n            apiKey: process.env.QWEN_API_KEY || '',\n            baseURL: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\n            model: 'qwen-turbo'\n        }\n    };\n    return configs[provider];\n}\n// 通用AI调用客户端\nclass UniversalAIClient {\n    constructor(config){\n        this.config = config;\n    }\n    async chat(messages) {\n        try {\n            const response = await fetch(`${this.config.baseURL}/chat/completions`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.config.apiKey}`\n                },\n                body: JSON.stringify({\n                    model: this.config.model,\n                    messages,\n                    temperature: 0.3,\n                    max_tokens: 800\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`AI API调用失败: ${response.status} ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data.choices?.[0]?.message?.content || '';\n        } catch (error) {\n            console.error(`${this.config.provider} API调用失败:`, error);\n            throw new Error(`${this.config.provider} API调用失败`);\n        }\n    }\n}\nclass AIProcessor {\n    static{\n        this.fallbackMode = process.env.ENABLE_FALLBACK_MODE === 'true';\n    }\n    static getClient() {\n        if (!this.client) {\n            const config = getAIConfig();\n            if (!config.apiKey) {\n                if (this.fallbackMode) {\n                    console.log('AI API密钥未配置，使用备用模式处理数据');\n                    return null;\n                }\n                throw new Error(`未配置 ${config.provider} API密钥`);\n            }\n            this.client = new UniversalAIClient(config);\n        }\n        return this.client;\n    }\n    static async processContent(raw) {\n        const correlationId = `ai_process_${raw.source_id}_${Date.now()}`;\n        _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].logAIProcessing('start', {\n            sourceId: raw.source_id,\n            titleLength: raw.title.length,\n            contentLength: raw.content.length\n        });\n        // 检查是否为备用模式\n        const client = this.getClient();\n        if (!client) {\n            console.log(`使用备用模式处理案例: ${raw.title}`);\n            return this.generateFallbackData(raw);\n        }\n        const prompt = `\n请将以下副业内容智能结构化为详细的JSON格式。基于原文内容进行分析和推理，提供尽可能完整的信息。\n\n原始内容：\n标题: ${raw.title}\n内容: ${raw.content.slice(0, 3000)}\n\n请返回以下格式的JSON（只返回JSON，不要任何其他文字）：\n{\n  \"title\": \"简洁标题（15字以内）\",\n  \"description\": \"详细描述（100字以内）\",\n  \"income\": \"收入范围（如：$500-2000/月）\",\n  \"time_required\": \"时间投入（如：10-20小时/周）\",\n  \"tools\": \"工具列表，逗号分隔\",\n  \"steps\": \"实施步骤，换行分隔\",\n  \"category\": \"分类（如：电商、服务、数字产品等）\",\n  \"difficulty\": \"难度等级（beginner/intermediate/advanced）\",\n  \"investment_required\": \"投资需求（如：低、中、高或具体金额）\",\n  \"skills_needed\": \"所需技能，逗号分隔\",\n  \"target_audience\": \"目标用户群体\",\n  \"potential_risks\": \"潜在风险和挑战\",\n  \"success_rate\": \"成功率估计（如：高、中等、低）\",\n  \"time_to_profit\": \"盈利时间（如：1-3个月）\",\n  \"scalability\": \"可扩展性（如：低、中等、高）\",\n  \"location_flexible\": true/false,\n  \"age_restriction\": \"年龄限制或要求\",\n  \"revenue_model\": \"收入模式（如：服务收费、产品销售、订阅等）\",\n  \"competition_level\": \"竞争程度（低、中等、高）\",\n  \"market_trend\": \"市场趋势（如：增长、稳定、下降）\",\n  \"key_metrics\": \"关键成功指标\",\n  \"tags\": [\"标签1\", \"标签2\", \"标签3\"]\n}\n\n分析原则：\n1. 基于原文内容进行智能推理，如果原文没有明确信息，根据上下文合理推断\n2. 收入和时间投入要根据内容线索合理估计\n3. 难度等级根据所需技能和投资综合判断\n4. 目标用户和风险因素要基于内容特点分析\n5. 只返回JSON格式，不要任何解释文字\n6. 所有字段都要填写，不要留空\n`;\n        try {\n            const timer = _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timer('ai_content_processing', {\n                sourceId: raw.source_id\n            }, correlationId);\n            const response = await client.chat([\n                {\n                    role: 'user',\n                    content: prompt\n                }\n            ]);\n            const content = response.trim();\n            if (!content) {\n                throw new Error('AI返回空内容');\n            }\n            // 尝试解析JSON\n            let parsedContent;\n            try {\n                // 清理可能的markdown格式\n                const cleanContent = content.replace(/```json\\n?|\\n?```/g, '').trim();\n                parsedContent = JSON.parse(cleanContent);\n            } catch (parseError) {\n                _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('ai_json_parse_failed', parseError, {\n                    sourceId: raw.source_id,\n                    rawContent: content.slice(0, 200)\n                }, correlationId);\n                // 如果解析失败，返回默认结构\n                parsedContent = {\n                    title: raw.title.slice(0, 50),\n                    description: raw.content || '这是一个来自社区的副业创意分享',\n                    income: '视情况而定',\n                    time_required: '灵活安排',\n                    tools: '请参考原始内容',\n                    steps: '1. 查看原始链接\\n2. 了解具体实施方法\\n3. 根据实际情况调整',\n                    category: '副业',\n                    difficulty: 'beginner',\n                    investment_required: '低',\n                    skills_needed: '基础技能',\n                    target_audience: '大众用户',\n                    potential_risks: '市场竞争',\n                    success_rate: '中等',\n                    time_to_profit: '1-3个月',\n                    scalability: '中等',\n                    location_flexible: true,\n                    age_restriction: '无限制',\n                    revenue_model: '服务收费',\n                    competition_level: '中等',\n                    market_trend: '稳定增长',\n                    key_metrics: '收入、客户满意度',\n                    tags: [\n                        '副业',\n                        '在线赚钱'\n                    ]\n                };\n            }\n            // 验证和清理数据\n            const result = {\n                title: this.cleanText(parsedContent.title || raw.title, 50),\n                description: this.cleanText(parsedContent.description || '', 100),\n                income: this.cleanText(parsedContent.income || '未知', 30),\n                time_required: this.cleanText(parsedContent.time_required || '未知', 30),\n                tools: this.cleanText(parsedContent.tools || '', 200),\n                steps: this.cleanText(parsedContent.steps || '', 500),\n                category: this.cleanText(parsedContent.category || '副业', 20),\n                difficulty: parsedContent.difficulty || 'beginner',\n                investment_required: this.cleanText(parsedContent.investment_required || '低', 20),\n                skills_needed: this.cleanText(parsedContent.skills_needed || '基础技能', 100),\n                target_audience: this.cleanText(parsedContent.target_audience || '大众用户', 50),\n                potential_risks: this.cleanText(parsedContent.potential_risks || '市场竞争', 100),\n                success_rate: this.cleanText(parsedContent.success_rate || '中等', 20),\n                time_to_profit: this.cleanText(parsedContent.time_to_profit || '1-3个月', 20),\n                scalability: this.cleanText(parsedContent.scalability || '中等', 20),\n                location_flexible: parsedContent.location_flexible ?? true,\n                age_restriction: this.cleanText(parsedContent.age_restriction || '无限制', 20),\n                revenue_model: this.cleanText(parsedContent.revenue_model || '服务收费', 30),\n                competition_level: this.cleanText(parsedContent.competition_level || '中等', 20),\n                market_trend: this.cleanText(parsedContent.market_trend || '稳定增长', 20),\n                key_metrics: this.cleanText(parsedContent.key_metrics || '收入、客户满意度', 50),\n                tags: parsedContent.tags || [\n                    '副业',\n                    '在线赚钱'\n                ]\n            };\n            const duration = timer.stop({\n                category: result.category,\n                difficulty: result.difficulty\n            });\n            _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].logAIProcessing('success', {\n                sourceId: raw.source_id,\n                duration,\n                category: result.category\n            });\n            return result;\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('ai_processing_failed', error, {\n                sourceId: raw.source_id,\n                title: raw.title.slice(0, 50)\n            }, correlationId);\n            // 返回基础结构化数据\n            return this.generateFallbackData(raw);\n        }\n    }\n    // 生成备用数据（当AI不可用时）\n    static generateFallbackData(raw) {\n        // 简单的关键词匹配来分类\n        const contentLower = (raw.title + ' ' + raw.content).toLowerCase();\n        let category = '副业';\n        let difficulty = 'beginner';\n        let investment = '低';\n        if (contentLower.includes('编程') || contentLower.includes('开发') || contentLower.includes('coding')) {\n            category = '技术开发';\n            difficulty = 'intermediate';\n        } else if (contentLower.includes('电商') || contentLower.includes('amazon') || contentLower.includes('shopify')) {\n            category = '电商';\n            investment = '中';\n        } else if (contentLower.includes('写作') || contentLower.includes('content') || contentLower.includes('blog')) {\n            category = '内容创作';\n            difficulty = 'beginner';\n        } else if (contentLower.includes('设计') || contentLower.includes('design')) {\n            category = '设计';\n            difficulty = 'intermediate';\n        } else if (contentLower.includes('营销') || contentLower.includes('marketing')) {\n            category = '营销推广';\n            difficulty = 'intermediate';\n        }\n        return {\n            title: raw.title.slice(0, 50),\n            description: raw.content ? raw.content.slice(0, 100) + '...' : '这是一个来自社区的副业创意分享',\n            income: '视情况而定',\n            time_required: '灵活安排',\n            tools: '请参考原始内容',\n            steps: `1. 查看原始链接: ${raw.source_url}\\n2. 了解详细实施步骤\\n3. 评估是否适合自己`,\n            category: category,\n            difficulty: difficulty,\n            investment_required: investment,\n            skills_needed: '请参考原始内容',\n            target_audience: '大众用户',\n            potential_risks: '市场竞争',\n            success_rate: '中等',\n            time_to_profit: '1-3个月',\n            scalability: '中等',\n            location_flexible: true,\n            age_restriction: '无限制',\n            revenue_model: '服务收费',\n            competition_level: '中等',\n            market_trend: '稳定增长',\n            key_metrics: '收入、客户满意度',\n            tags: [\n                category,\n                '副业',\n                '在线赚钱'\n            ]\n        };\n    }\n    // 清理和验证文本内容\n    static cleanText(text, maxLength) {\n        if (!text) return '';\n        return text.trim().slice(0, maxLength).replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    }\n    // 批量处理多个案例\n    static async processBatch(rawCases) {\n        const results = [];\n        // 控制并发数量，避免API限制\n        const batchSize = 3;\n        for(let i = 0; i < rawCases.length; i += batchSize){\n            const batch = rawCases.slice(i, i + batchSize);\n            const batchPromises = batch.map((raw)=>this.processContent(raw).catch((error)=>{\n                    console.error(`处理案例失败: ${raw.title}`, error);\n                    return {\n                        title: raw.title.slice(0, 50),\n                        description: raw.content || '这是一个来自社区的副业创意分享，处理过程中遇到一些问题',\n                        income: '视情况而定',\n                        time_required: '灵活安排',\n                        tools: '请参考原始内容',\n                        steps: '1. 查看原始链接获取完整信息\\n2. 根据个人情况调整方案',\n                        category: '副业',\n                        difficulty: 'beginner',\n                        investment_required: '低',\n                        skills_needed: '基础技能',\n                        target_audience: '大众用户',\n                        potential_risks: '市场竞争',\n                        success_rate: '中等',\n                        time_to_profit: '1-3个月',\n                        scalability: '中等',\n                        location_flexible: true,\n                        age_restriction: '无限制',\n                        revenue_model: '服务收费',\n                        competition_level: '中等',\n                        market_trend: '稳定增长',\n                        key_metrics: '收入、客户满意度',\n                        tags: [\n                            '副业',\n                            '在线赚钱'\n                        ]\n                    };\n                }));\n            const batchResults = await Promise.all(batchPromises);\n            results.push(...batchResults);\n            // 批次间延迟，避免API频率限制\n            if (i + batchSize < rawCases.length) {\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            }\n        }\n        return results;\n    }\n    // 获取当前使用的AI提供商\n    static getCurrentProvider() {\n        return getAIConfig().provider;\n    }\n    // 测试AI连接\n    static async testConnection() {\n        try {\n            const client = this.getClient();\n            await client.chat([\n                {\n                    role: 'user',\n                    content: '测试连接'\n                }\n            ]);\n            return true;\n        } catch (error) {\n            console.error('AI连接测试失败:', error);\n            return false;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AIProcessor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/openai.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaseRepository: () => (/* binding */ CaseRepository),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// 直接使用PostgreSQL连接\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n    connectionString: process.env.DATABASE_URL || 'postgresql://postgres:password@localhost:5432/sidehustle',\n    ssl: {\n        rejectUnauthorized: false\n    }\n});\n// 数据库操作类\nclass CaseRepository {\n    // 获取所有案例（前端使用，保持向后兼容）\n    static async getPublishedCases(limit = 20, offset = 0) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('SELECT * FROM cases ORDER BY created_at DESC LIMIT $1 OFFSET $2', [\n                limit,\n                offset\n            ]);\n            return result.rows;\n        } catch (error) {\n            console.error('获取案例失败:', error);\n            throw new Error('获取案例失败');\n        } finally{\n            client.release();\n        }\n    }\n    // 获取单个案例（前端使用）\n    static async getCaseById(id) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('SELECT * FROM cases WHERE id = $1', [\n                id\n            ]);\n            return result.rows[0] || null;\n        } catch (error) {\n            console.error('获取案例详情失败:', error);\n            return null;\n        } finally{\n            client.release();\n        }\n    }\n    // 获取所有案例（前端使用，支持分页）\n    static async getAllCases(limit = 20, offset = 0) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('SELECT * FROM cases ORDER BY created_at DESC LIMIT $1 OFFSET $2', [\n                limit,\n                offset\n            ]);\n            return result.rows;\n        } catch (error) {\n            console.error('获取案例失败:', error);\n            // Return empty array instead of throwing error for better UX\n            return [];\n        } finally{\n            client.release();\n        }\n    }\n    // 创建新案例\n    static async createCase(caseData) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query(`INSERT INTO cases (\n          title, description, income, time_required, tools, steps, source_url, raw_content, published,\n          category, difficulty, investment_required, skills_needed, target_audience, potential_risks,\n          success_rate, time_to_profit, scalability, location_flexible, age_restriction, revenue_model,\n          competition_level, market_trend, key_metrics, author, upvotes, comments_count, tags,\n          admin_approved, admin_notes\n        ) VALUES (\n          $1, $2, $3, $4, $5, $6, $7, $8, $9,\n          $10, $11, $12, $13, $14, $15,\n          $16, $17, $18, $19, $20, $21,\n          $22, $23, $24, $25, $26, $27, $28,\n          $29, $30\n        ) RETURNING *`, [\n                caseData.title,\n                caseData.description,\n                caseData.income,\n                caseData.time_required,\n                caseData.tools,\n                caseData.steps,\n                caseData.source_url,\n                caseData.raw_content,\n                caseData.published,\n                caseData.category,\n                caseData.difficulty,\n                caseData.investment_required,\n                caseData.skills_needed,\n                caseData.target_audience,\n                caseData.potential_risks,\n                caseData.success_rate,\n                caseData.time_to_profit,\n                caseData.scalability,\n                caseData.location_flexible,\n                caseData.age_restriction,\n                caseData.revenue_model,\n                caseData.competition_level,\n                caseData.market_trend,\n                caseData.key_metrics,\n                caseData.author,\n                caseData.upvotes,\n                caseData.comments_count,\n                caseData.tags,\n                caseData.admin_approved || false,\n                caseData.admin_notes || null\n            ]);\n            return result.rows[0];\n        } catch (error) {\n            console.error('创建案例失败:', error);\n            throw new Error('创建案例失败');\n        } finally{\n            client.release();\n        }\n    }\n    // 更新发布状态\n    static async updatePublishStatus(id, published) {\n        const client = await pool.connect();\n        try {\n            await client.query('UPDATE cases SET published = $1 WHERE id = $2', [\n                published,\n                id\n            ]);\n        } catch (error) {\n            console.error('更新发布状态失败:', error);\n            throw new Error('更新发布状态失败');\n        } finally{\n            client.release();\n        }\n    }\n    // 批量更新发布状态\n    static async batchUpdatePublishStatus(ids, published) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('UPDATE cases SET published = $1 WHERE id = ANY($2::int[]) RETURNING id', [\n                published,\n                ids\n            ]);\n            return result.rowCount || 0;\n        } catch (error) {\n            console.error('批量更新发布状态失败:', error);\n            throw new Error('批量更新发布状态失败');\n        } finally{\n            client.release();\n        }\n    }\n    // 检查案例是否已存在（根据source_url）\n    static async caseExists(sourceUrl) {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('SELECT id FROM cases WHERE source_url = $1', [\n                sourceUrl\n            ]);\n            return result.rows.length > 0;\n        } catch (error) {\n            console.error('检查案例存在性失败:', error);\n            return false;\n        } finally{\n            client.release();\n        }\n    }\n    // 清理所有数据\n    static async clearAllData() {\n        const client = await pool.connect();\n        try {\n            const result = await client.query('DELETE FROM cases RETURNING id');\n            console.log(`已清理 ${result.rowCount} 条数据`);\n            return result.rowCount || 0;\n        } catch (error) {\n            console.error('清理数据失败:', error);\n            throw new Error('清理数据失败');\n        } finally{\n            client.release();\n        }\n    }\n    // 数据库连接测试\n    static async testConnection() {\n        const client = await pool.connect();\n        try {\n            await client.query('SELECT 1');\n            return true;\n        } catch (error) {\n            console.error('数据库连接失败:', error);\n            return false;\n        } finally{\n            client.release();\n        }\n    }\n    // 初始化数据库表\n    static async initTables() {\n        const client = await pool.connect();\n        try {\n            await client.query(`\n        CREATE TABLE IF NOT EXISTS cases (\n          id SERIAL PRIMARY KEY,\n          title TEXT NOT NULL,\n          description TEXT,\n          income TEXT,\n          time_required TEXT,\n          tools TEXT,\n          steps TEXT,\n          source_url TEXT,\n          raw_content TEXT,\n          published BOOLEAN DEFAULT false,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          -- 新增字段\n          category TEXT,\n          difficulty TEXT CHECK (difficulty IN ('beginner', 'intermediate', 'advanced')),\n          investment_required TEXT,\n          skills_needed TEXT,\n          target_audience TEXT,\n          potential_risks TEXT,\n          success_rate TEXT,\n          time_to_profit TEXT,\n          scalability TEXT,\n          location_flexible BOOLEAN DEFAULT false,\n          age_restriction TEXT,\n          revenue_model TEXT,\n          competition_level TEXT,\n          market_trend TEXT,\n          key_metrics TEXT,\n          author TEXT,\n          upvotes INTEGER DEFAULT 0,\n          comments_count INTEGER DEFAULT 0,\n          tags TEXT[],\n          -- 管理字段\n          admin_approved BOOLEAN DEFAULT false,\n          admin_notes TEXT\n        );\n\n        CREATE INDEX IF NOT EXISTS idx_cases_published ON cases(published);\n        CREATE INDEX IF NOT EXISTS idx_cases_created ON cases(created_at DESC);\n        CREATE INDEX IF NOT EXISTS idx_cases_source_url ON cases(source_url);\n        CREATE INDEX IF NOT EXISTS idx_cases_category ON cases(category);\n        CREATE INDEX IF NOT EXISTS idx_cases_difficulty ON cases(difficulty);\n      `);\n            console.log('数据库表初始化成功');\n        } catch (error) {\n            console.error('数据库表初始化失败:', error);\n            throw new Error('数据库表初始化失败');\n        } finally{\n            client.release();\n        }\n    }\n}\n// 保持向后兼容\nconst supabase = null;\nconst supabaseAdmin = null;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch%2Froute&page=%2Fapi%2Ffetch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch%2Froute.ts&appDir=%2Froot%2FRichIdeaHub%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2FRichIdeaHub&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();